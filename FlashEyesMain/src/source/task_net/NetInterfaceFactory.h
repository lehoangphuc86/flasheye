#include "NetManagerConstant.h"

#if (_CONF_NET_INTERFACE_FACTORY_ENABLED)

#ifndef _NET_INTERFACE_FACTORY_H
#define _NET_INTERFACE_FACTORY_H

/////////////////////////////////////////////////
// INCLUDE
#include "NetInterface.h"
/////////////////////////////////////////////////
// PREPROCESSOR

/////////////////////////////////////////////////
// DEFINE

/////////////////////////////////////////////////
// MARCO

/////////////////////////////////////////////////
// GLOBAL VARIABLES

/////////////////////////////////////////////////
// GLOBAL FUNCTIONS

/////////////////////////////////////////////////
// DATA TYPE (TYPEDEF)

/////////////////////////////////////////////////
// DATA TYPE (ENUM)

/////////////////////////////////////////////////
// DATA TYPE (STRUCT)

/////////////////////////////////////////////////
// STATIC DATA

/////////////////////////////////////////////////
// STATIC FUNCTIONS

/////////////////////////////////////////////////
// EXTERN

/////////////////////////////////////////////////
// CLASS DEFINITION
/*NetInterfaceFactory*/
class NetInterfaceFactory
{
public:
  NetInterfaceFactory(void);
  // WARNING: if inherite from this class, deconstructor must be virtual
  __ATTRIBUTE_VIRTUAL_OPTIMIZED ~NetInterfaceFactory(void);
public:
  static NetInterface*                                     generate(byte netType);
  static void                                              release(NetInterface*& netInterface);
};
#endif // _NET_INTERFACE_FACTORY_H

#endif // _CONF_NET_INTERFACE_FACTORY_ENABLED